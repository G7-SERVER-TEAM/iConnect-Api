version: '1.1'
services:
  user_service:
    build:
      context: .
      dockerfile: "./apps/user/Dockerfile"
      target: development
    command: ["npm", "run", "start:dev", "user"]
    container_name: user_service
    env_file:
      - ./apps/.env
    ports:
      - "8080:8080"
    volumes:
      - ".:/usr/src/app"
    networks:
      - iConnect_network
  auth_service:
    build:
      context: .
      dockerfile: "./apps/auth/Dockerfile"
      target: development
    command: ["npm", "run", "start:dev", "auth"]
    container_name: auth_service
    env_file:
      - ./apps/.env
    ports:
      - "8081:8081"
    volumes:
      - ".:/usr/src/app"
    networks:
      - iConnect_network
  area_service:
    build:
      context: .
      dockerfile: ./apps/area/Dockerfile
    command: ["npm", "run", "start:dev", "area"]
    container_name: area_service
    env_file:
      - ./apps/.env
    ports:
      - 8082:8082
    volumes:
      - .:/usr/src/app
    networks:
      - iConnect_network
  iConnect_database:
    image: mysql:8.1
    command: --default-authentication-plugin=caching_sha2_password
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
    container_name: iConnect_database
    volumes:
      - iConnect_db:/var/lib/mysql
      - ./sql/initialize.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '3307:3306'
    networks:
      - iConnect_network
volumes:
  iConnect_db:
networks:
  iConnect_network: